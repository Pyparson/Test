{
  "uid" : "aa8fe78b5ad91a22",
  "name" : "test_three[5-7-9]",
  "fullName" : "test_work2.TestA#test_three",
  "historyId" : "67788ebee6ba081243870e930b32a23f",
  "time" : {
    "start" : 1572057907060,
    "stop" : 1572057907061,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 12 == 9\n +  where 12 = add(5, 7)",
  "statusTrace" : "self = <Work.test_work2.TestA object at 0x100fca390>, module = None\nclassA_end = None, a = 5, b = 7, expected = 9\n\n    @pytest.mark.parametrize(\"a,b,expected\", [(5, 7, 9)])\n    def test_three(self, module, classA_end, a, b, expected):\n        logging.info(\"This is test_three!!!\")\n>       assert add(a, b) == expected\nE       assert 12 == 9\nE        +  where 12 = add(5, 7)\n\ntest_work2.py:28: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "classA_end",
    "time" : {
      "start" : 1572057907048,
      "stop" : 1572057907048,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "module",
    "time" : {
      "start" : 1572057907047,
      "stop" : 1572057907047,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "classB_start",
    "time" : {
      "start" : 1572057907058,
      "stop" : 1572057907058,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 12 == 9\n +  where 12 = add(5, 7)",
    "statusTrace" : "self = <Work.test_work2.TestA object at 0x100fca390>, module = None\nclassA_end = None, a = 5, b = 7, expected = 9\n\n    @pytest.mark.parametrize(\"a,b,expected\", [(5, 7, 9)])\n    def test_three(self, module, classA_end, a, b, expected):\n        logging.info(\"This is test_three!!!\")\n>       assert add(a, b) == expected\nE       assert 12 == 9\nE        +  where 12 = add(5, 7)\n\ntest_work2.py:28: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "62b2483114a1d16c",
      "name" : "log",
      "source" : "62b2483114a1d16c.txt",
      "type" : "text/plain",
      "size" : 158
    }, {
      "uid" : "8a57800c1cb84688",
      "name" : "stderr",
      "source" : "8a57800c1cb84688.txt",
      "type" : "text/plain",
      "size" : 100
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "classA_end::0",
    "time" : {
      "start" : 1572057907069,
      "stop" : 1572057907069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_work2"
  }, {
    "name" : "subSuite",
    "value" : "TestA"
  }, {
    "name" : "host",
    "value" : "ParsondeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "6382-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_work2"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "5"
  }, {
    "name" : "b",
    "value" : "7"
  }, {
    "name" : "expected",
    "value" : "9"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "aa8fe78b5ad91a22.json",
  "parameterValues" : [ "5", "7", "9" ]
}